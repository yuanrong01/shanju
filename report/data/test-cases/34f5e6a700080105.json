{
  "uid" : "34f5e6a700080105",
  "name" : "test_login[1-验证手机号码错误，登录失败-http://10.113.248.196/api-user/v1/user/login/phone-headers0-params0-expect_result0]",
  "fullName" : "testcase.test_user_login.TestLogin#test_login",
  "historyId" : "adddeb4d2adf17cbbf5178ac475f4944",
  "time" : {
    "start" : 1605516379204,
    "stop" : 1605516379373,
    "duration" : 169
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <testcase.test_user_login.TestLogin object at 0x000001AC1240CF60>\ncase_id = 1, case_name = '验证手机号码错误，登录失败'\nurl = 'http://10.113.248.196/api-user/v1/user/login/phone'\nheaders = {'content-type': 'application/json', 'device': 'ios', 'device-id': 'yuanrong-001', 'device-model': 'iphone12', ...}\nparams = {'deviceId': 'test001', 'phone': '123456', 'smsCode': '123456'}\nexpect_result = {'code': 100, 'msg': 'SUCCESS'}\n\n    @pytest.mark.parametrize(\"case_id,case_name,url, headers,params, expect_result\", re)\n    \n    def test_login(self, case_id, case_name, url, headers, params, expect_result):\n        log.info(\"---------------------------开始执行用例---------------------------------\")\n        log.info(\"用例编号： {} ,用例名称： {}\".format(case_id, case_name))\n        result = ReqClient.post(url=url, json=params, headers=headers)\n>       assertResult(result.json(),expect_result)\n\ntestcase\\test_user_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nreal_data = {'code': 200, 'msg': 'SUCCESS', 'result': {'age': 0, 'avatar': '', 'gender': 0, 'isRegister': 0, ...}}\nexpect_result = {'code': 100, 'msg': 'SUCCESS'}\n\n    def assertResult(real_data,expect_result):\n        # flag = True\n        code = expect_result[\"code\"]\n        msg = expect_result[\"msg\"]\n        #result = expect_result[\"result\"]\n        real_code = real_data[\"code\"]\n        real_msg = real_data[\"msg\"]\n        #real_result = real_data[\"result\"]\n    \n>       assert code == real_code\nE       AssertionError\n\ncommon\\assertResult.py:13: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <testcase.test_user_login.TestLogin object at 0x000001AC1240CF60>\ncase_id = 1, case_name = '验证手机号码错误，登录失败'\nurl = 'http://10.113.248.196/api-user/v1/user/login/phone'\nheaders = {'content-type': 'application/json', 'device': 'ios', 'device-id': 'yuanrong-001', 'device-model': 'iphone12', ...}\nparams = {'deviceId': 'test001', 'phone': '123456', 'smsCode': '123456'}\nexpect_result = {'code': 100, 'msg': 'SUCCESS'}\n\n    @pytest.mark.parametrize(\"case_id,case_name,url, headers,params, expect_result\", re)\n    \n    def test_login(self, case_id, case_name, url, headers, params, expect_result):\n        log.info(\"---------------------------开始执行用例---------------------------------\")\n        log.info(\"用例编号： {} ,用例名称： {}\".format(case_id, case_name))\n        result = ReqClient.post(url=url, json=params, headers=headers)\n>       assertResult(result.json(),expect_result)\n\ntestcase\\test_user_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nreal_data = {'code': 200, 'msg': 'SUCCESS', 'result': {'age': 0, 'avatar': '', 'gender': 0, 'isRegister': 0, ...}}\nexpect_result = {'code': 100, 'msg': 'SUCCESS'}\n\n    def assertResult(real_data,expect_result):\n        # flag = True\n        code = expect_result[\"code\"]\n        msg = expect_result[\"msg\"]\n        #result = expect_result[\"result\"]\n        real_code = real_data[\"code\"]\n        real_msg = real_data[\"msg\"]\n        #real_result = real_data[\"result\"]\n    \n>       assert code == real_code\nE       AssertionError\n\ncommon\\assertResult.py:13: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a8141da0c07d67c1",
      "name" : "log",
      "source" : "a8141da0c07d67c1.txt",
      "type" : "text/plain",
      "size" : 1224
    }, {
      "uid" : "bc0178b2c20d0509",
      "name" : "stderr",
      "source" : "bc0178b2c20d0509.txt",
      "type" : "text/plain",
      "size" : 1355
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_user_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "DESKTOP-GSJ6A37"
  }, {
    "name" : "thread",
    "value" : "7848-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_user_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_id",
    "value" : "1"
  }, {
    "name" : "case_name",
    "value" : "'验证手机号码错误，登录失败'"
  }, {
    "name" : "expect_result",
    "value" : "{'code': 100, 'msg': 'SUCCESS'}"
  }, {
    "name" : "headers",
    "value" : "{'content-type': 'application/json', 'token': '${token}', 'version': '1.3.0', 'device': 'ios', 'device-id': 'yuanrong-001', 'device-model': 'iphone12', 'device-os-ver': '13.4.1'}"
  }, {
    "name" : "params",
    "value" : "{'phone': '123456', 'smsCode': '123456', 'deviceId': 'test001'}"
  }, {
    "name" : "url",
    "value" : "'http://10.113.248.196/api-user/v1/user/login/phone'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "34f5e6a700080105.json",
  "parameterValues" : [ "1", "'验证手机号码错误，登录失败'", "{'code': 100, 'msg': 'SUCCESS'}", "{'content-type': 'application/json', 'token': '${token}', 'version': '1.3.0', 'device': 'ios', 'device-id': 'yuanrong-001', 'device-model': 'iphone12', 'device-os-ver': '13.4.1'}", "{'phone': '123456', 'smsCode': '123456', 'deviceId': 'test001'}", "'http://10.113.248.196/api-user/v1/user/login/phone'" ]
}