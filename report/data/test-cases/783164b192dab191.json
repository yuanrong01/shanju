{
  "uid" : "783164b192dab191",
  "name" : "test_appRechargeSubmit[2-充值成功-http://10.113.248.196/api-user/v1/recharge/submit-headers1-params1-expect_result1]",
  "fullName" : "testcase.test_appRechargeSubmit.TestRechargeSubmit#test_appRechargeSubmit",
  "historyId" : "608a92f8144c3e5c898cd7e9b1cf9d91",
  "time" : {
    "start" : 1605519842816,
    "stop" : 1605519842920,
    "duration" : 104
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <testcase.test_appRechargeSubmit.TestRechargeSubmit object at 0x00000147655AAE80>\ncase_id = 2, case_name = '充值成功'\nurl = 'http://10.113.248.196/api-user/v1/recharge/submit'\nheaders = {'content-type': 'application/json', 'device': 'ios', 'device-id': 'yuanrong-001', 'device-model': 'iphone12', ...}\nparams = {'priceId': 2, 'rechargeType': 1}\nexpect_result = {'code': 200, 'msg': 'SUCCESS', 'result': {'ces': 11}}\n\n    @pytest.mark.parametrize(\"case_id,case_name,url, headers,params, expect_result\", re)\n    def test_appRechargeSubmit(self,case_id, case_name, url, headers, params, expect_result):\n        log.info(\"----------------------------------开始执行用例--------------------------------\")\n        log.info(\"用例编号： {} ,用例名称： {}\".format(case_id, case_name))\n        headers= self.headers_new\n        result = ReqClient.post(url=url,json=params,headers=headers)\n>       assertResult(result.json(), expect_result)\n\ntestcase\\test_appRechargeSubmit.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nreal_data = {'code': 500, 'msg': '服务器异常', 'result': {}}\nexpect_result = {'code': 200, 'msg': 'SUCCESS', 'result': {'ces': 11}}\n\n    def assertResult(real_data,expect_result):\n    \n        code = expect_result[\"code\"]\n        msg = expect_result[\"msg\"]\n        #result = expect_result[\"result\"]\n        real_code = real_data[\"code\"]\n        real_msg = real_data[\"msg\"]\n        #real_result = real_data[\"result\"]\n    \n>       assert code == real_code\nE       AssertionError\n\ncommon\\assertResult.py:13: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <testcase.test_appRechargeSubmit.TestRechargeSubmit object at 0x00000147655AAE80>\ncase_id = 2, case_name = '充值成功'\nurl = 'http://10.113.248.196/api-user/v1/recharge/submit'\nheaders = {'content-type': 'application/json', 'device': 'ios', 'device-id': 'yuanrong-001', 'device-model': 'iphone12', ...}\nparams = {'priceId': 2, 'rechargeType': 1}\nexpect_result = {'code': 200, 'msg': 'SUCCESS', 'result': {'ces': 11}}\n\n    @pytest.mark.parametrize(\"case_id,case_name,url, headers,params, expect_result\", re)\n    def test_appRechargeSubmit(self,case_id, case_name, url, headers, params, expect_result):\n        log.info(\"----------------------------------开始执行用例--------------------------------\")\n        log.info(\"用例编号： {} ,用例名称： {}\".format(case_id, case_name))\n        headers= self.headers_new\n        result = ReqClient.post(url=url,json=params,headers=headers)\n>       assertResult(result.json(), expect_result)\n\ntestcase\\test_appRechargeSubmit.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nreal_data = {'code': 500, 'msg': '服务器异常', 'result': {}}\nexpect_result = {'code': 200, 'msg': 'SUCCESS', 'result': {'ces': 11}}\n\n    def assertResult(real_data,expect_result):\n    \n        code = expect_result[\"code\"]\n        msg = expect_result[\"msg\"]\n        #result = expect_result[\"result\"]\n        real_code = real_data[\"code\"]\n        real_msg = real_data[\"msg\"]\n        #real_result = real_data[\"result\"]\n    \n>       assert code == real_code\nE       AssertionError\n\ncommon\\assertResult.py:13: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "715cf7970a2557c0",
      "name" : "log",
      "source" : "715cf7970a2557c0.txt",
      "type" : "text/plain",
      "size" : 1085
    }, {
      "uid" : "a6407e123a4b99fa",
      "name" : "stderr",
      "source" : "a6407e123a4b99fa.txt",
      "type" : "text/plain",
      "size" : 1323
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_appRechargeSubmit"
  }, {
    "name" : "subSuite",
    "value" : "TestRechargeSubmit"
  }, {
    "name" : "host",
    "value" : "DESKTOP-GSJ6A37"
  }, {
    "name" : "thread",
    "value" : "13504-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_appRechargeSubmit"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_id",
    "value" : "2"
  }, {
    "name" : "case_name",
    "value" : "'充值成功'"
  }, {
    "name" : "expect_result",
    "value" : "{'code': 200, 'msg': 'SUCCESS', 'result': {'ces': 11}}"
  }, {
    "name" : "headers",
    "value" : "{'content-type': 'application/json', 'token': '${token}', 'version': '1.3.0', 'device': 'ios', 'device-id': 'yuanrong-001', 'device-model': 'iphone12', 'device-os-ver': '13.4.1'}"
  }, {
    "name" : "params",
    "value" : "{'priceId': 2, 'rechargeType': 1}"
  }, {
    "name" : "url",
    "value" : "'http://10.113.248.196/api-user/v1/recharge/submit'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "783164b192dab191.json",
  "parameterValues" : [ "2", "'充值成功'", "{'code': 200, 'msg': 'SUCCESS', 'result': {'ces': 11}}", "{'content-type': 'application/json', 'token': '${token}', 'version': '1.3.0', 'device': 'ios', 'device-id': 'yuanrong-001', 'device-model': 'iphone12', 'device-os-ver': '13.4.1'}", "{'priceId': 2, 'rechargeType': 1}", "'http://10.113.248.196/api-user/v1/recharge/submit'" ]
}